#include<vector>
class Solution {
public:
    vector<int> nextGreaterElements(vector<int>& nums) {
       stack<int>st;
        int n=nums.size();
       vector<int>res(n,-1);
       for(int i=2*n-1;i>=0;i--){
           while(!st.empty() && st.top()<=nums[i%n]){
               st.pop();
           }
           if(i<n){
               if(st.empty()==1){
                   res[i]=-1;
               }
               else{
                   res[i]=st.top();
               }
           }
           st.push(nums[i%n]);
       }
       return res; 
    }
};




*************************************************************************
*************************************************************************
class Solution {
public:
    vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {
       unordered_map<int,int>umap;
        stack<int>st;
        int n=nums2.size();
        for(int i=n-1;i>=0;i--)
        {
            int ele=nums2[i];
            while(!st.empty() && st.top()<ele)
            {
                st.pop();
            }
            int res=(st.empty())? -1 : st.top();
            umap.insert({ele,res});
            st.push(ele);
        }
        vector<int>ans;
        for(auto x : nums1)
        {
            ans.push_back(umap[x]);
        }
        return ans;
    }
};
