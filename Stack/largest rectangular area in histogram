class Solution {
    private:
    vector<int> findprevsmaller(vector<int> &arr) {
    int n = arr.size();
    stack<int> st;
    st.push(-1);
    vector<int> ans(n);
    for (int i = 0; i < n; i++) { // Fixed syntax error: changed ,< to <
        int ele = arr[i];
        while (st.top() != -1 && arr[st.top()] >= ele) {
            st.pop();
        }
        ans[i] = st.top();
        st.push(i); // Pushing index i into the stack
        }
        return ans;
    }

    vector<int> findnextsmaller(vector<int> &arr) {
        int n = arr.size();
        stack<int> st;
        st.push(-1);
        vector<int> ans(n);
        for (int i = n - 1; i >= 0; i--) {
            int ele = arr[i];
            while (st.top() != -1 && arr[st.top()] >= ele) {
                st.pop();
            }
            ans[i] = st.top();
            st.push(i); // Pushing index i into the stack
        }
        return ans;
    }


public:
    int largestRectangleArea(vector<int>& heights) {
        int n = heights.size();

    vector<int> next(n); 
    next = findnextsmaller(heights);
    
    vector<int> prev(n);
    prev=findprevsmaller(heights);

    int area = INT_MIN;
    for (int i = 0; i < n; i++) {
        int l = heights[i];
        if (next[i] == -1) {
            next[i] = n;
        }
        int w = next[i] - prev[i] - 1;
        int new_area = l * w;
        area = max(new_area, area);
    }
    return area;
    }
};
