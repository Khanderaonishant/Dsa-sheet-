class Solution {
   private:
    bool validChar (char ch)           //valid char check
    {
        if((ch>='a' && ch<='z')||(ch>='A' && ch<='Z')||(ch>='0' && ch<='9'))
        {
             return 1;
        }
        return 0;
    }
    char toLower(char ch)
    {
        if((ch>='a'&& ch<='z') || (ch>='0' && ch<='9' ))
        {
            return ch;
        }
        else
        {
            char ans = ch-'A'+'a';
            return ans;
        }
    }
    bool checkpalindrome(string a)
    {
        int s=0;
        int e=a.length()-1;
        while(s<=e)
        {
            if(a[s]!=a[e])
            {
                return 0;
            }
            else
            {
                s++;
                e--;
            }  
        }
        return 1;
    }
          
public:
    bool isPalindrome(string s) {
        string temp="";
        for(int j=0;j<s.length();j++)         //valid char push into temp;
        {
            if(validChar(s[j]))
            {
                temp.push_back(s[j]);
            }
        }
        for(int j=0;j<temp.length();j++)          //toLower comparing
        {
            temp[j]=toLower(temp[j]);
        }
        return checkpalindrome(temp);
    } 
};

          
